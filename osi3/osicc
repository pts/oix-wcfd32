#! /bin/sh --
#
# osicc: OpenWatcom C compiler fronted for the Watcom OS-independent target (OIX, __OSI__)
# by pts@fazekas.hu at Sat Apr 27 05:15:07 CEST 2024
#

osidir=.
test "${0%/*}" = "$0" || osidir="${0%/*}"

unset WLANG LANG LANGUAGE LC_ALL LC_CTYPE

if test $# = 0; then
  echo "Usage: $0 <source.c> [...]" >&2
  exit 1
fi

basefn="${1%.*}"
if test "$basefn" = "$1"; then
  echo "fatal: source filename with extension expected: $1" >&2
  exit 2
fi

if ! type owcc >/dev/null 2>&1; then
  echo "fatal: compiler command not found: owcc" >&2
fi

# !! TODO(pts): Make -W... configurable.
# !! TODO(pts): Add -o flag etc.
# !! TODO(pts): Don't create temporary .o files in the current directory (there is owcc flag, we have to run wcc386 and wlink, and manage manually). Also clean up.

#INCLUDE="$osidir/h_empty" owcc -brawbin \
#    -Wl,order -Wl,clname -Wl,FAR_DATA -Wl,op -Wl,q -Wl,op -Wl,start=_cstart_ -Wl,op -Wl,d -Wl,disable -Wl,1014 -Wl,op -Wl,noext \
#    -Wno-n201 -Wno-n202 -D__OSI__ -Wc,-fi="$osidir/__osi__.h" -fnostdlib -fno-stack-check -Os -s -march=i386 -Wall -Wextra -Werror -o "$basefn.oix" "$@" || exit "$?"

unset WATCOM INCLUDE
INCLUDE="$osidir/h_empty"

ofiles=""  # !! Use only newline as separator.
for cfile in "$@"; do
  ofile="${cfile%.*}".o
  ofiles="$ofiles f $ofile"
  # -fo=.o
  #wcc386
  #./wcc386-2.0-2020-09-08
  wcc386 -q -bt=rawbin -wcd=201 -wcd=202 -D__OSI__ -fi="$osidir"/__osi__.h -zl -s -os -w4 -wx -we -3r -fo="$ofile" -fr "$cfile" || exit "$?"
done
# !! ./wlink-1.9 OpenWatcom 1.9 (2010-05-25) has `form raw bin', but it's buggy, it calculates the offset with alignment added.
# !! This works: https://github.com/open-watcom/open-watcom-v2/releases/download/2020-09-08-Build/open-watcom-2_0-c-linux-x86
#dwlink
#./wlink-2.0-2020-09-08
wlink form raw bin ord cln FAR_DATA op q op start=_cstart_ op d disable 1014 op noext n "$basefn".oix $ofiles || exit "$?"

: "$0" OK.
